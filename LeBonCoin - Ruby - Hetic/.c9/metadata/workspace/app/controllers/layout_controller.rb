{"filter":false,"title":"layout_controller.rb","tooltip":"/app/controllers/layout_controller.rb","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["class AnnoncesController < ApplicationController","  before_action :set_annonce, only: [:show, :edit, :update, :destroy]","","  # GET /annonces","  # GET /annonces.json","  def index","    @annonces = Annonce.all","  end","","  # GET /annonces/1","  # GET /annonces/1.json","  def show","  end","","  # GET /annonces/new","  def new","    @annonce = Annonce.new","  end","","  # GET /annonces/1/edit","  def edit","  end","","  # POST /annonces","  # POST /annonces.json","  def create","    @annonce = Annonce.new(annonce_params)","","    respond_to do |format|","      if @annonce.save","        format.html { redirect_to @annonce, notice: 'Annonce was successfully created.' }","        format.json { render :show, status: :created, location: @annonce }","      else","        format.html { render :new }","        format.json { render json: @annonce.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /annonces/1","  # PATCH/PUT /annonces/1.json","  def update","    respond_to do |format|","      if @annonce.update(annonce_params)","        format.html { redirect_to @annonce, notice: 'Annonce was successfully updated.' }","        format.json { render :show, status: :ok, location: @annonce }","      else","        format.html { render :edit }","        format.json { render json: @annonce.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /annonces/1","  # DELETE /annonces/1.json","  def destroy","    @annonce.destroy","    respond_to do |format|","      format.html { redirect_to annonces_url, notice: 'Annonce was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_annonce","      @annonce = Annonce.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def annonce_params","      params.require(:annonce).permit(:title, :description, :price, :category_id)","    end","end",""],"id":1}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":14},"action":"remove","lines":["Annonces"],"id":2},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["L"]}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["a"],"id":3}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["y"],"id":4}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["o"],"id":5}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["u"],"id":6}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["t"],"id":7}],[{"start":{"row":1,"column":2},"end":{"row":4,"column":22},"action":"remove","lines":["before_action :set_annonce, only: [:show, :edit, :update, :destroy]","","  # GET /annonces","  # GET /annonces.json"],"id":8}],[{"start":{"row":5,"column":0},"end":{"row":69,"column":7},"action":"remove","lines":["","  # GET /annonces/1","  # GET /annonces/1.json","  def show","  end","","  # GET /annonces/new","  def new","    @annonce = Annonce.new","  end","","  # GET /annonces/1/edit","  def edit","  end","","  # POST /annonces","  # POST /annonces.json","  def create","    @annonce = Annonce.new(annonce_params)","","    respond_to do |format|","      if @annonce.save","        format.html { redirect_to @annonce, notice: 'Annonce was successfully created.' }","        format.json { render :show, status: :created, location: @annonce }","      else","        format.html { render :new }","        format.json { render json: @annonce.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /annonces/1","  # PATCH/PUT /annonces/1.json","  def update","    respond_to do |format|","      if @annonce.update(annonce_params)","        format.html { redirect_to @annonce, notice: 'Annonce was successfully updated.' }","        format.json { render :show, status: :ok, location: @annonce }","      else","        format.html { render :edit }","        format.json { render json: @annonce.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /annonces/1","  # DELETE /annonces/1.json","  def destroy","    @annonce.destroy","    respond_to do |format|","      format.html { redirect_to annonces_url, notice: 'Annonce was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_annonce","      @annonce = Annonce.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def annonce_params","      params.require(:annonce).permit(:title, :description, :price, :category_id)","    end"],"id":9}],[{"start":{"row":4,"column":5},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":10}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":27},"action":"remove","lines":["@annonces = Annonce.all"],"id":11}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":4},"end":{"row":3,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"mode":"ace/mode/ruby"}},"timestamp":1485938261668,"hash":"5ffe7ee5250421eb7f2273f5706c6edc965da18b"}